class Solution {
  public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        // Your code here
        vector<vector<int>>ans;
        priority_queue<int, vector<int>, greater<int>>pq;
        map<int, priority_queue<int, vector<int>, greater<int>>>mp;
        for(int i=0; i<points.size(); i++){
            int x = points[i][0];
            int y = points[i][1];
            int sqr = pow(x,2) + pow(y,2);
            mp[sqr].push(i);
            pq.push(sqr);
        }
        while(k!=0 && !pq.empty()){
            int elem = pq.top();
            pq.pop();
            int idx = mp[elem].top();
            mp[elem].pop();
            ans.push_back(points[idx]);
            k--;
        }
        return ans;
    }
};
