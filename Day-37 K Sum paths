class Solution {
  public:
  void getsumK(Node* root, int k, unordered_map<int, int>&mp, int currSum, int &count){
      if(root==NULL) return;
      currSum+=root->data;
      if(currSum==k){
          count++;
      }
          if(mp.find(currSum-k)!=mp.end()){
              count+=mp[currSum-k];
        }
      mp[currSum]++;
      getsumK(root->left, k, mp, currSum, count);
      getsumK(root->right, k, mp, currSum, count);
      mp[currSum]--;
  }
    int sumK(Node *root, int k) {
        // code here
        int count=0;
        unordered_map<int, int>mp;
        getsumK(root, k, mp, 0, count);
        return count;
    }
};
